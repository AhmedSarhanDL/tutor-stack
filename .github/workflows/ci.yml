name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  PYTHON_VERSION: "3.11"

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: tutor_stack_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pytest-mock requests
        pip install -e .

    - name: Run unit tests
      run: |
        pytest tests/unit/ -v --cov=tutor_stack_core --cov-report=xml

    - name: Run integration tests
      run: |
        pytest tests/integration/ -v --cov=tutor_stack_core --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  docker-build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and cache Docker images
      run: |
        docker build -f Dockerfile.base -t tutor-stack-base .
        docker build -f Dockerfile.dev -t tutor-stack-dev .

    - name: Test Docker Compose
      run: |
        docker compose up --build -d
        sleep 30
        docker compose ps
        docker compose logs --tail=50

  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    needs: docker-build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install test dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest requests

    - name: Start services
      run: |
        docker compose up --build -d
        sleep 60  # Wait for services to be ready

    - name: Run E2E tests
      run: |
        pytest tests/e2e/ -v

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: |
          test-results/
          .pytest_cache/

    - name: Cleanup
      if: always()
      run: |
        docker compose down -v 